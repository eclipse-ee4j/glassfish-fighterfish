#
# Copyright (c) 2013, 2019 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

# This is a simple bnd instructions file that we use to run OSGi Compliance Tests.
# We use the same file for all test suites, viz: 
# org.osgi.test.cases.http, 
# org.osgi.test.cases.transaction, 
# org.osgi.test.cases.webcontainer, 
# org.osgi.test.cases.jdbc, 
# etc.
#
# This script uses following properties which are supplied to it from command line via -D properties:
#
# glassfish.home -  specifies where glassfish has been installed.
# ct.home - specifies where OSGi CT has been checked out
# ct.name - refers to the OSGi CT test suite that we want to run. e.g., http|transaction|webcontainer
#

-target = ${ct.home}/org.osgi.test.cases.${ct.name}/generated/org.osgi.test.cases.${ct.name}.jar;version=file

-runpath = \
       ${glassfish.home}/osgi/felix/bin/felix.jar;version=file, \
       ${java.home}/lib/tools.jar;version=file, \
       ${ct.home}/licensed/repo/com.springsource.junit/com.springsource.junit-3.8.2.jar;version=file;export="junit.framework;version=3.8"
       
# Ideally running glassfish.jar should be sufficient, but the CT assumes certain environment.
# So, we provision some additional bundles.
# javax.servlet-api_2.5 is needed for OSGi r4v42 HTTP CT as it expects javax.servlet 2.5 package.
# Although javax.servlet 3.0 is backward compatible, it can't wire to it.
# Similarly, org.osgi.impl.service.log-1.3.2.jar is needed for OSGi Web CT as GlassFish does not have a log service bundle
# and the CT requires a LogService to test certain scenarios. 
# test.ct.misc.bundle.delay.jar is needed for all CTs, because the CTs assume everything is immediately started,
# where as GlassFish starts all the OSGi services after its core services are started. So, this delay bundle
# introduces a 10 second delay so that CTs don't start running before services are available.
-runbundles = \
 ${user.home}/.m2/repository/org/glassfish/fighterfish/fighterfish-test-ct-misc-bundle/3.0.0-SNAPSHOT/fighterfish-test-ct-misc-bundle-servlet-2.5.jar;version=file, \
 ${glassfish.home}/modules/glassfish.jar;version=file, \
 ${user.home}/.m2/repository/org/glassfish/fighterfish/test.ct.misc.bundle.delay/3.0.0-SNAPSHOT/fighterfish-test-ct-misc-bundle-delay.jar;version=file
    
# Start VM in debug mode to allow us to easily attach a debugger.
# All options that are needed to start a debugger are passed in one string with ',' as a delim.
-runvm = -Xdebug,-Xnoagent,"-Djava.compiler=NONE","-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=localhost:9009"

# TODO: How to configure osgi cache dir location? 
# Specifying it using org.osgi.framework.storage in -runproperties does not work.

# com.sun.aas.installRoot is needed to successfully bootstrap GlassFish.
# org.osgi.framework.* properties are used to ensure we bootstrap correctly.
# org.osgi.service.http.*  and org.glassfish.osgihttp.ContextPath properties are needed for HTTP CT.
# osgi.support.multipleHosts and org.osgi.service.webcontainer.* properties are needed for Web CT
-runproperties = \
    com.sun.aas.installRoot=${glassfish.home}, \
    org.osgi.framework.bundle.parent=framework, \
    org.osgi.framework.storage.clean=onFirstInit, \
    org.osgi.service.http.hostname=127.0.0.1, \
    org.osgi.service.http.port=8080, \
    org.glassfish.osgihttp.ContextPath=/, \
    osgi.support.multipleHosts=true, \
    org.osgi.service.webcontainer.hostname=127.0.0.1, \
    org.osgi.service.webcontainer.http.port=8080, \
    gosh.args=--nointeractive

# Use these if you want to run on Equinox
# Equinox options
#   osgi.resolverMode=strict, \
#   osgi.compatibility.bootdelegation=false, \
